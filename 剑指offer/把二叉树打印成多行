#### 从上到下按层打印二叉树，同一层结点从左至右输出。每一层输出一行。
思路：二叉树的层次遍历，借助队列实现，即将队列的首部弹出的同时，将其左右子树压入队列尾部。
```cpp
#include <iostream>
#include <vector>
#include <queue>
using namespace std;

struct TreeNode {
    int val;
    struct TreeNode *left;
    struct TreeNode *right;
    TreeNode(int x) :
            val(x), left(NULL), right(NULL) {
    }
};

class Solution {
public:
    vector<vector<int> > Print(TreeNode* pRoot) {
        vector<vector<int> > data;
        if(pRoot == NULL)
            return data;
        queue<TreeNode*> q;
        q.push(pRoot);
        while(!q.empty()){
            int left=0,right=q.size();
            vector<int> p;
            while(left++<right){
                TreeNode *t = q.front();
                q.pop();
                p.push_back(t->val);
                if(t->left) q.push(t->left);
                if(t->right) q.push(t->right);
            }
            data.push_back(p);
        }
        return data;
    }
};

int main()
{
    cout << "Hello world!" << endl;
    return 0;
}
```
